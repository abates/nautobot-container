name: Create and publish a Docker image

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: "write"
  packages: "write"

jobs:
  tag-main-branch:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Chekout repository"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v4"
      - name: "Extract Versions"
        run: |
          git fetch --tags origin
          echo "NAUTOBOT_VERSION=$(poetry show nautobot | grep 'version' | awk '{print $3}')" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(poetry version -s)" >> $GITHUB_ENV
          echo "NEW_TAG=v$(poetry version -s)" >> $GITHUB_ENV
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo)" >> $GITHUB_ENV
      - name: "Add Tag"
        if: "${{ env.NEW_TAG != env.LATEST_TAG }}"
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag "$NEW_TAG"
          git push origin $NEW_TAG

  build-and-push-image:
    runs-on: "ubuntu-latest"
    needs: "tag-main-branch"
    steps:
      - name: "Chekout repository"
        uses: "actions/checkout@v4"
      - name: "Log in to the Container registry"
        uses: "docker/login-action@v3"
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v4"
      - name: "Extract Tags"
        run: |
          git fetch --tags origin
          TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "TAG_EXISTS=$(docker manifest inspect $REGISTRY/$IMAGE_NAME:$TAG >/dev/null 2>&1 && echo 'tag-exists')" >> $GITHUB_ENV
          echo "NAUTOBOT_VERSION=$(poetry show nautobot | grep 'version' | awk '{print $3}')" >> $GITHUB_ENV

      - name: "Extract metadata (tags, labels) for Docker"
        if: "${{ env.TAG_EXISTS != 'tag-exists' }}"
        id: "meta"
        uses: "docker/metadata-action@v5"
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
      - name: "Build and push Docker image"
        if: "${{ env.TAG_EXISTS != 'tag-exists' }}"
        uses: "docker/build-push-action@v3"
        with:
          build-args: |
            "NAUTOBOT_VERSION=${{ env.NAUTOBOT_VERSION }}"
            "PYTHON_VER=3.11"
          context: "."
          file: "environments/Dockerfile"
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          labels: "${{ steps.meta.outputs.labels }}"

